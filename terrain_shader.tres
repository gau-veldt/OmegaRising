[gd_resource type="MaterialShader" format=1]

[resource]

_code = { "fragment":"uniform texture btmTilemap;\nuniform texture topTilemap;\nuniform texture mixTilemap;\nuniform texture tileset;\nuniform texture mixset;\nuniform float tileSize=128;\nuniform float tilesetWidth=1024;\nuniform float tilesetHeight=1024;\n\nvec2 temp=vec2(0,0);\ntemp.x=tilesetWidth/tileSize;\ntemp-=fract(temp);\nfloat tilesPerRow=temp.x;\n\n// figure out grid cell\nvec2 cell=vec2(VAR1.x,VAR1.z); // set by v-shader\ncell=floor(cell);\ncell=max(cell,vec2(0,0));\ncell=min(cell,vec2(18,18));\ncell/=18;\n\n// lookup desired tile for this cell\nvec3 btmIdx=tex(btmTilemap,cell).rgb;\nbtmIdx*=255;\nbtmIdx=round(btmIdx);\nbtmIdx=clamp(btmIdx,vec3(0,0,0),vec3(255,255,255));\nbtmIdx*=(2*tileSize);\n\nvec3 topIdx=tex(topTilemap,cell).rgb;\ntopIdx*=255;\ntopIdx=round(topIdx);\ntopIdx=clamp(topIdx,vec3(0,0,0),vec3(255,255,255));\ntopIdx*=(2*tileSize);\n\nvec3 mixIdx=tex(mixTilemap,cell).rgb;\nmixIdx*=255;\nmixIdx=round(mixIdx);\nmixIdx=clamp(mixIdx,vec3(0,0,0),vec3(255,255,255));\nmixIdx*=(2*tileSize);\n\n// figure out tileset textures offset\nvec2 btmUV;\nbtmUV.x=(64+btmIdx.x+(UV.x*(tileSize-1)))/tilesetWidth;\nbtmUV.y=(64+btmIdx.y+(UV.y*(tileSize-1)))/tilesetHeight;\nvec3 btmTexel=tex(tileset,btmUV).rgb;\n\nvec2 topUV;\ntopUV.x=(64+topIdx.x+(UV.x*(tileSize-1)))/tilesetWidth;\ntopUV.y=(64+topIdx.y+(UV.y*(tileSize-1)))/tilesetHeight;\nvec3 topTexel=tex(tileset,topUV).rgb;\n\nvec2 mixUV;\nmixUV.x=(64+mixIdx.x+(UV.x*(tileSize-1)))/tilesetWidth;\nmixUV.y=(64+mixIdx.y+(UV.y*(tileSize-1)))/tilesetHeight;\nvec3 mixTexel=tex(mixset,mixUV).rgb;\nfloat mixAmt=(mixTexel.r+mixTexel.g+mixTexel.b)/3;\n\nDIFFUSE.rgb=mix(btmTexel,topTexel,mixAmt).rgb;\n//DIFFUSE.rgb=mixTexel.rgb;\n\n", "fragment_ofs":0, "light":"", "light_ofs":0, "vertex":"uniform texture heightMap;\nuniform float vScale=1;\n\nVAR1.x=SRC_VERTEX.x+9.5;\nVAR1.z=SRC_VERTEX.z+9.5;\nvec2 hmUV=vec2(VAR1.x/18,VAR1.z/18);\nvec3 hv=tex(heightMap,hmUV).rgb;\nfloat h=vScale*((hv.r*255)+(256*(hv.g*255))-32768);\nvec3 vtx=vec3(SRC_VERTEX.x,h,SRC_VERTEX.z);\nVERTEX=MODELVIEW_MATRIX*vtx;\n", "vertex_ofs":0 }

